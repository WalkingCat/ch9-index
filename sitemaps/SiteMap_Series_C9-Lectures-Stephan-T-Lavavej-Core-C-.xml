<?xml version="1.0" encoding="UTF-8" ?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:video="http://www.google.com/schemas/sitemap-video/1.1">
  <url>
      <loc>https://channel9.msdn.com/Series/C9-Lectures-Stephan-T-Lavavej-Core-C-</loc>
      <title><![CDATA[C9 Lectures: Stephan T. Lavavej - Core C++]]></title>
      <thumbnail_loc>https://f.ch9.ms/thumbnail/57fe332a-6d82-4749-ae62-7dd35db79aff.png</thumbnail_loc>
      <description><![CDATA[Stephan T. Lavavej, aka STL, is back on C9! This time, STL will take us on a journey of discovery within the exciting world of Core C++ (standard C++, the core language). We know lots &amp;#8230;]]></description>
   </url>
  <url>
      <loc>https://channel9.msdn.com/Series/C9-Lectures-Stephan-T-Lavavej-Core-C-/Stephan-T-Lavavej-Core-C-1-of-n</loc>
      <video:video>
        <video:thumbnail_loc>https://sec.ch9.ms/ch9/9621/e2f65287-7bd4-4e1a-91d9-405a746c9621/STLCCSeries1_512.jpg</video:thumbnail_loc>
        <video:title><![CDATA[Stephan T. Lavavej: Core C++, 1 of n]]></video:title>
        <video:description><![CDATA[In part 1, STL focuses on Name Lookup, which is a surprisingly complex process. Remember Herb Sutter's great GotW post (#30, to be precise) on Name Lookup? Here's the problem from that post, to refres&amp;#8230;]]></video:description>
        <video:content_loc>https://sec.ch9.ms/ch9/9621/e2f65287-7bd4-4e1a-91d9-405a746c9621/STLCCSeries1_high.mp4</video:content_loc>
        <video:publication_date>2012-05-16 14:21:32Z</video:publication_date>
      </video:video>
   </url>
  <url>
      <loc>https://channel9.msdn.com/Series/C9-Lectures-Stephan-T-Lavavej-Core-C-/Stephan-T-Lavavej-Core-C-2-of-n</loc>
      <video:video>
        <video:thumbnail_loc>https://sec.ch9.ms/ch9/946b/5538634e-0f05-42e3-b43a-448579ac946b/STLCCSeries2_512.jpg</video:thumbnail_loc>
        <video:title><![CDATA[Stephan T. Lavavej: Core C++, 2 of n]]></video:title>
        <video:description><![CDATA[In part 2, STL will teach us all about Template Argument Deduction. Template arguments are deduced when a call is made to a template function, but some or all template arguments are omitted. The compi&amp;#8230;]]></video:description>
        <video:content_loc>https://sec.ch9.ms/ch9/946b/5538634e-0f05-42e3-b43a-448579ac946b/STLCCSeries2_high.mp4</video:content_loc>
        <video:publication_date>2012-07-09 18:52:05Z</video:publication_date>
      </video:video>
   </url>
  <url>
      <loc>https://channel9.msdn.com/Series/C9-Lectures-Stephan-T-Lavavej-Core-C-/Stephan-T-Lavavej-Core-Cpp-3-of-n</loc>
      <video:video>
        <video:thumbnail_loc>https://sec.ch9.ms/ch9/14ba/7956779d-5f7a-4ec8-9aa5-ec6cd66e14ba/STLCCSeries3_512.jpg</video:thumbnail_loc>
        <video:title><![CDATA[Stephan T. Lavavej: Core C++, 3 of n]]></video:title>
        <video:description><![CDATA[In Part 3, STL digs into Overload Resolution. A function template can overload non-template functions of the same name. In this scenario, function calls are resolved by first using template argument d&amp;#8230;]]></video:description>
        <video:content_loc>https://sec.ch9.ms/ch9/14ba/7956779d-5f7a-4ec8-9aa5-ec6cd66e14ba/STLCCSeries3_high.mp4</video:content_loc>
        <video:publication_date>2012-07-24 12:00:00Z</video:publication_date>
      </video:video>
   </url>
  <url>
      <loc>https://channel9.msdn.com/Series/C9-Lectures-Stephan-T-Lavavej-Core-C-/Stephan-T-Lavavej-Core-C-4-of-n</loc>
      <video:video>
        <video:thumbnail_loc>https://sec.ch9.ms/ch9/ea7e/fbf53e6f-514c-44a9-ba4e-bfd55e20ea7e/STLCCSeries4_512.jpg</video:thumbnail_loc>
        <video:title><![CDATA[Stephan T. Lavavej - Core C++, 4 of n]]></video:title>
        <video:description><![CDATA[n part 4, Stephan teaches us about Virtual Functions. In parts 1-3, we learned about compile-time constructs. Now, we enter the realm of runtime. STL spends some time discussing inheritance and a bit&amp;#8230;]]></video:description>
        <video:content_loc>https://sec.ch9.ms/ch9/ea7e/fbf53e6f-514c-44a9-ba4e-bfd55e20ea7e/STLCCSeries4_high.mp4</video:content_loc>
        <video:publication_date>2012-08-22 13:00:00Z</video:publication_date>
      </video:video>
   </url>
  <url>
      <loc>https://channel9.msdn.com/Series/C9-Lectures-Stephan-T-Lavavej-Core-C-/Stephan-T-Lavavej-Core-C-5-of-n</loc>
      <video:video>
        <video:thumbnail_loc>https://sec.ch9.ms/ch9/85cb/6a754168-16e0-4e98-9543-2bc31d3885cb/STLCCSeries5_512.jpg</video:thumbnail_loc>
        <video:title><![CDATA[Stephan T. Lavavej - Core C++, 5 of n]]></video:title>
        <video:description><![CDATA[In Part 5, Stephan teaches us about Explicit and Partial Specialization of class and function templates. From MSDN -&amp;gt; Class templates can be specialized for specific types or values of the template&amp;#8230;]]></video:description>
        <video:content_loc>https://sec.ch9.ms/ch9/85cb/6a754168-16e0-4e98-9543-2bc31d3885cb/STLCCSeries5_high.mp4</video:content_loc>
        <video:publication_date>2012-10-24 19:44:43Z</video:publication_date>
      </video:video>
   </url>
  <url>
      <loc>https://channel9.msdn.com/Series/C9-Lectures-Stephan-T-Lavavej-Core-C-/STLCCSeries6</loc>
      <video:video>
        <video:thumbnail_loc>https://sec.ch9.ms/ch9/fd24/86f23ed6-98a1-4404-9503-bb1461d2fd24/STLCCSeries6_512.jpg</video:thumbnail_loc>
        <video:title><![CDATA[Stephan T. Lavavej - Core C++, 6 of n]]></video:title>
        <video:description><![CDATA[Part 6 is a special episode in which Stephan takes a look at the latest C&amp;#43;&amp;#43;11 features that were just added to the Visual C&amp;#43;&amp;#43; compiler:Variadic templates Raw string literalsExplicit co&amp;#8230;]]></video:description>
        <video:content_loc>https://sec.ch9.ms/ch9/fd24/86f23ed6-98a1-4404-9503-bb1461d2fd24/STLCCSeries6_high.mp4</video:content_loc>
        <video:publication_date>2012-11-02 19:45:00Z</video:publication_date>
      </video:video>
   </url>
  <url>
      <loc>https://channel9.msdn.com/Series/C9-Lectures-Stephan-T-Lavavej-Core-C-/Stephan-T-Lavavej-Core-C-7-of-n</loc>
      <video:video>
        <video:thumbnail_loc>https://sec.ch9.ms/ch9/d1ce/949a6d45-7399-46cb-b82e-affaf38bd1ce/STLCCSeries7_512.jp</video:thumbnail_loc>
        <video:title><![CDATA[Stephan T. Lavavej - Core C++, 7 of n]]></video:title>
        <video:description><![CDATA[In Part 7, STL teaches us about Usual Arithmetic Conversions, Template Metaprogramming, and shares some of the STL internal implementation ( some of it not yet released  ). Many of you have asked for &amp;#8230;]]></video:description>
        <video:content_loc>https://sec.ch9.ms/ch9/d1ce/949a6d45-7399-46cb-b82e-affaf38bd1ce/STLCCSeries7_high.mp4</video:content_loc>
        <video:publication_date>2012-12-25 19:05:34Z</video:publication_date>
      </video:video>
   </url>
  <url>
      <loc>https://channel9.msdn.com/Series/C9-Lectures-Stephan-T-Lavavej-Core-C-/Stephan-T-Lavavej-Core-Cpp-8-of-n</loc>
      <video:video>
        <video:thumbnail_loc>https://sec.ch9.ms/ch9/4cff/50c64290-10bd-4d6b-bd56-7a264d4b4cff/STLCCSeries8_512.jp</video:thumbnail_loc>
        <video:title><![CDATA[Stephan T. Lavavej - Core C++, 8 of n]]></video:title>
        <video:description><![CDATA[In part 8, STL digs into the do-while loop, casts, one definition rule (ODR), and his variadic template array sorter. There is a lot of information in this episode, so get comfortable, tune in, and le&amp;#8230;]]></video:description>
        <video:content_loc>https://sec.ch9.ms/ch9/4cff/50c64290-10bd-4d6b-bd56-7a264d4b4cff/STLCCSeries8_high.mp4</video:content_loc>
        <video:publication_date>2013-02-05 17:23:54Z</video:publication_date>
      </video:video>
   </url>
  <url>
      <loc>https://channel9.msdn.com/Series/C9-Lectures-Stephan-T-Lavavej-Core-C-/Stephan-T-Lavavej-Core-C-9-of-n</loc>
      <video:video>
        <video:thumbnail_loc>https://sec.ch9.ms/ch9/2f81/b39e50d9-5b94-477a-8bc1-b9789d242f81/STLCCSeries9_960.jpg</video:thumbnail_loc>
        <video:title><![CDATA[Stephan T. Lavavej - Core C++, 9 of n]]></video:title>
        <video:description><![CDATA[In part 9, STL digs into lambdas and other expressions. Lambdas are very useful and you've know doubt been enjoying them in your modern C&amp;#43;&amp;#43; programming. As you can imagine, STL will go deep an&amp;#8230;]]></video:description>
        <video:content_loc>https://sec.ch9.ms/ch9/2f81/b39e50d9-5b94-477a-8bc1-b9789d242f81/STLCCSeries9_high.mp4</video:content_loc>
        <video:publication_date>2013-06-11 13:30:00Z</video:publication_date>
      </video:video>
   </url>
  <url>
      <loc>https://channel9.msdn.com/Series/C9-Lectures-Stephan-T-Lavavej-Core-C-/Core-Cpp-10</loc>
      <video:video>
        <video:thumbnail_loc>https://sec.ch9.ms/ch9/ea15/fe7abb84-7e9b-45be-ba97-9ba56354ea15/STLCCSeries10_960.jpg</video:thumbnail_loc>
        <video:title><![CDATA[Stephan T. Lavavej - Core C++, 10 of n (Nov 2013 CTP)]]></video:title>
        <video:description><![CDATA[In part 10, STL explores the new features in the Visual C&amp;#43;&amp;#43; Compiler November 2013 CTP (Community Technology Preview), in addition to the features that were added between VC 2013 Preview and R&amp;#8230;]]></video:description>
        <video:content_loc>https://sec.ch9.ms/ch9/ea15/fe7abb84-7e9b-45be-ba97-9ba56354ea15/STLCCSeries10_high.mp4</video:content_loc>
        <video:publication_date>2013-11-18 19:39:52Z</video:publication_date>
      </video:video>
   </url>
</urlset> 
